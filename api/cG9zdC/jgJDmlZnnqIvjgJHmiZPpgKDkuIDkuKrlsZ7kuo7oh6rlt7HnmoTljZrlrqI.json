{"title":"【教程】打造一个属于自己的博客","date":"2019-05-12T03:50:06.000Z","author":"Ziduan Zhang","thumbnail":"img/post4.jpg","slug":"【教程】打造一个属于自己的博客","tags":["Github Pages","Hexo","博客","教程"],"categories":["教程"],"updated":"2019-05-12T06:43:41.081Z","content":"<p>写一篇如何用Hexo搭建博客的文章，<br>既是一个记录，也是一个教程。</p>\n<a id=\"more\"></a>  \n<hr>\n<h1 id=\"打造一个属于自己的博客\">打造一个属于自己的博客<a href=\"post/【教程】打造一个属于自己的博客#打造一个属于自己的博客\"></a></h1><h2 id=\"简介\">简介<a href=\"post/【教程】打造一个属于自己的博客#简介\"></a></h2><p>这一篇教程是我在搭建了我自己的博客（也就是你正在看到的这个）之后决定写的，我想，这是一种形式的记录，记录下我当时创建博客的过程，也是一种教程，可以方便其他需要的人在创建自己的博客时有一个参考。</p>\n<p>现在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。</p>\n<p>而自己购买域名和服务器，搭建博客的成本实在是太高了，而且花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p>\n<p>那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p>\n<p>我的本地操作系统环境是Windows，所以这篇文章后续所有都是基于Windows的。因为整个网站是搭建在Github Pages上的，所以除了域名的钱（你可以选择不要），一分也没有花。</p>\n<p>整个教程其实非常简单，只要慢慢做就行了，没什么难的。</p>\n<h2 id=\"Hexo\">Hexo<a href=\"post/【教程】打造一个属于自己的博客#Hexo\"></a></h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上。因为Hexo的创建者是台湾人，对中文的支持很友好，所以大家可以选择去<a href=\"https://hexo.io/zh-cn/index.html]\" target=\"_blank\" rel=\"noopener\">官网</a>查看更多信息。</p>\n<h2 id=\"搭建步骤\">搭建步骤<a href=\"post/【教程】打造一个属于自己的博客#搭建步骤\"></a></h2><ol>\n<li>准备工作</li>\n<li>Hexo安装与基本设置</li>\n<li>将Hexo部署到Github上</li>\n<li>发布文章</li>\n<li>进阶设置</li>\n</ol>\n<h2 id=\"准备工作\">准备工作<a href=\"post/【教程】打造一个属于自己的博客#准备工作\"></a></h2><p>要想使用Hexo搭建博客，首先你需要Git以及Node.js</p>\n<h3 id=\"Git\">Git<a href=\"post/【教程】打造一个属于自己的博客#Git\"></a></h3><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也是你用来管理你的hexo博客的工具。</p>\n<p>你可以在<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">Git官网</a>下载并安装Git。安装过程中如果不知道怎么设置，那就什么都别管，无脑疯狂点击下一步即可。</p>\n<h3 id=\"Node-js\">Node.js<a href=\"post/【教程】打造一个属于自己的博客#Node-js\"></a></h3><p>Node.js是Hexo可以正常运行的必备条件之一。你可以在<a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>下载并安装，下载时选择LTS版本即可。</p>\n<h2 id=\"Hexo安装与基本设置\">Hexo安装与基本设置<a href=\"post/【教程】打造一个属于自己的博客#Hexo安装与基本设置\"></a></h2><p>在准备工作做完之后我们就可以安装Hexo了，在你想要创建博客的地方新建一个文件夹，然后在这个文件夹里，右键，选择<code>Git Bash Here</code> 。之后，将会打开一个黑框框，接下来的命令都是在这里输入。</p>\n<div class=\"article-img\"><p><img src=\"img/post4/gitbash.jpg\" alt=\"git_bash\" data-zoomable></p></div>\n<p>接下来输入以下代码来安装hexo</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>当安装完成后，如果你能使用<code>hexo -v</code>查看到版本信息则安装成功。</p>\n<p>接下来我们要初始化你的博客。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;floder&gt;</span><br></pre></td></tr></table></figure>\n<p>要注意的是，这里的<code>&lt;floder&gt;</code>是你自己取的名字，随便什么都可以。在这行指令执行完之后你会发现你的文件夹目录里新建了一个叫做<code>&lt;floder&gt;</code>的文件夹。接下来，执行以下两行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &lt;floder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>同样，这里的<code>&lt;floder&gt;</code>是你前面创建的文件夹名字。在上面的代码执行完成之后，你的myblog文件夹下将会有以下文件（文件夹）：</p>\n<ul>\n<li>node_modules: 依赖包</li>\n<li>public：存放生成的页面</li>\n<li>scaffolds：生成文章的一些模板</li>\n<li>source：用来存放你的文件资源</li>\n<li>themes：主题</li>\n<li><strong>_config.yml: 博客的配置文件</strong></li>\n</ul>\n<p>想要了解更多这些文件的作用，你可以参考<a href=\"https://hexo.io/zh-cn/docs/setup\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p>目前你的博客其实已经准备就绪，不过里面的内容是系统自动生成的罢了，你可以使用<code>hexo generate</code>来根据当前内容生成网页，再使用<code>hexo server</code>打开本地服务器。一切就绪后，在你的浏览器输入<code>localhost:4000</code>就可以看到你生成的博客了。</p>\n<p>你可以在Git Bash中按下Ctrl+C关闭服务。至此，Hexo的安装就完成了。</p>\n<h2 id=\"将Hexo部署到Github上\">将Hexo部署到Github上<a href=\"post/【教程】打造一个属于自己的博客#将Hexo部署到Github上\"></a></h2><h3 id=\"创建个人仓库\">创建个人仓库<a href=\"post/【教程】打造一个属于自己的博客#创建个人仓库\"></a></h3><p>首先你需要注册一个<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github账号</a></p>\n<p>注册完登录后，在GitHub.com中看到一个New repository，点击即可新建仓库。</p>\n<p>创建一个名为<code>&lt;username&gt;.github.io</code>的仓库，只有这样，将来要部署到GitHub page的时候，才会被识别。例如，如果你的用户名叫xiaoming，那这里你需要新建一个名为xiaoming.github.io的项目。</p>\n<div class=\"article-img\"><p><img src=\"img/post4/gitnew.jpg\" alt=\"new_rep\" data-zoomable></p></div>\n<p>点击create repository即可完成创建。</p>\n<h3 id=\"生成SSH并添加到Github\">生成SSH并添加到Github<a href=\"post/【教程】打造一个属于自己的博客#生成SSH并添加到Github\"></a></h3><p>回到你的Git bash中，输入一下两行指令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;&lt;yourname&gt;&quot;</span><br><span class=\"line\">git config --global user.email &quot;&lt;youremail&gt;&quot;</span><br></pre></td></tr></table></figure>\n<p>这里的<code>&lt;yourname&gt;</code>带入你的Github用户名，<code>&lt;youremail&gt;</code>带入你的Github注册邮箱。在你配置好后你可以用<code>git config user.name</code>和<code>git config user.email</code>来检查你有没有输入正确。</p>\n<p>接下来创建SSH，输入指令，<code>&lt;youremail&gt;</code>同样带入你的邮箱</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;&lt;youremail&gt;&quot;</span><br></pre></td></tr></table></figure>\n<p>然后一路敲回车即可，直到他告诉你生成成功，你会看到一个奇怪的图形。这个时候它会告诉你已经生成了.ssh的文件夹。你需要在你的电脑中找到这个文件夹。</p>\n<p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>\n<p>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key，title随便取，key就是id_rsa.pub里面的内容，用记事本等软件可以打开，复制进去然后提交。</p>\n<p>在gitbash中，使用<code>ssh -T git@github.com</code>查看是否成功。如果成功，gitbash中会出现<code>You&#39;ve successfully authenticated</code>等字样。</p>\n<h3 id=\"设置Github-Pages\">设置Github Pages<a href=\"post/【教程】打造一个属于自己的博客#设置Github-Pages\"></a></h3><p>在你的github仓库页面选中设置，向下找到Github Pages，选择choose a theme，之后按照指引一直下一步就行了。中间需要填写内容的地方都可以不用管，毕竟等一会儿就会被你上传的Hexo覆盖掉。</p>\n<p>当你设置好了后，在浏览器输入<code>&lt;yourname&gt;.github.io</code>就可以看到你刚才设置的网页了。同样，<code>&lt;yourname&gt;</code>带入你的github用户名。</p>\n<div class=\"article-img\"><p><img src=\"img/post4/git1.jpg\" alt=\"git1\" data-zoomable><br><img src=\"img/post4/git2.jpg\" alt=\"git2\" data-zoomable></p></div>\n<h3 id=\"准备部署\">准备部署<a href=\"post/【教程】打造一个属于自己的博客#准备部署\"></a></h3><p>接下来打开<code>&lt;floder&gt;</code>文件夹（你最早创建博客时创建的文件夹），找到<code>_config.yml</code>文件，用记事本或其它软件打开它，在最下面找到<code>deploy</code>并且按照下面的代码块修改它。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>请注意将<code>YourgithubName</code>修改为你的Github用户名。</p>\n<p>回到gitbash中，输入<code>npm install hexo-deployer-git --save</code>安装部署插件。</p>\n<h3 id=\"上传！\">上传！<a href=\"post/【教程】打造一个属于自己的博客#上传！\"></a></h3><p>做好了上面的准备工作后，你只需要以下三行指令即可上传你的博客。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>其中，<code>hexo clean</code>是清楚当前缓存，<code>hexo generate</code>用于生成网页，<code>hexo deploy</code>用于将你的网页部署。其中<code>hexo generate</code>可以用<code>hexo g</code>代替，<code>hexo deploy</code>可以用<code>hexo d</code>来代替。</p>\n<p>在部署过程中，可能会要求你输入Github的username和password。</p>\n<p>在你使用<code>hexo d</code>正式部署到github让所有人都能看见之前，你可以使用<code>hexo server</code>或<code>hexo s</code>打开本地服务器，在浏览器中进入<code>localhost:4000</code>查看你的博客。</p>\n<p>以后，你每写一篇新的文章或者做出一些新的改动，你都需要重新生成并部署你的博客。</p>\n<p>在你完成部署后，稍等片刻，便可以在浏览器中进入<code>http://yourgithubname.github.io</code>查看你的个人博客了。同样，请将<code>yourgithubname</code>带入你自己的用户名。</p>\n<h2 id=\"发布文章\">发布文章<a href=\"post/【教程】打造一个属于自己的博客#发布文章\"></a></h2><p>在gitbash中使用<code>hexo new &lt;title&gt;</code>即可创建新的文章。<code>&lt;title&gt;</code>是你这一篇文章的标题。</p>\n<p>你可以在<code>&lt;floder&gt;/source/_post</code>中找到你所有的文章（包括最早系统自动生成的那一篇，你可以选择删掉他）</p>\n<p>生成的文章都是md格式的，你可以选择任意一款markdown编辑器进行写作。</p>\n<blockquote>\n<p>Markdown 是一种轻量级的标记语言，由John Gruber和Aaron Swartz创建，使其成为可读性最大并可再发行的可输入输出的格式。</p>\n</blockquote>\n<p>你可以在网络上找到很多markdown编辑器，在Windows平台，我强烈推荐使用<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>进行写作。或者你也可以像我一样，尝试使用Visual Studio Code配合插件markdownlint和插件Markdown Preview Enhanced使用。</p>\n<p>你可以在网上找到很多Markdown教程，我随便找了一篇放在这里：<a href=\"https://www.jianshu.com/p/191d1e21f7ed\" target=\"_blank\" rel=\"noopener\">点我</a></p>\n<p>当你编辑好你的文章之后，记得使用<code>hexo clean</code> <code>hexo g</code> 和 <code>hexo d</code>进行生成和部署。</p>\n<p>为了省事，你还可以吧<code>hexo g</code> 和 <code>hexo d</code>两条指令合到一条：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"进阶设置\">进阶设置<a href=\"post/【教程】打造一个属于自己的博客#进阶设置\"></a></h2><p>进阶设置包括自定义个人域名，<code>_config.yml</code>的配置教程，博客主题更换等内容，将会写在下一篇文章里面。</p>\n<hr>\n<p>那么，最后，感谢你的支持，希望这篇文章对你有用。</p>\n","next":{"title":"【诗】幸运","slug":"【诗】幸运"},"link":"http://ziduan.tech/post/【教程】打造一个属于自己的博客/","toc":[{"title":"打造一个属于自己的博客","id":"打造一个属于自己的博客","index":"1","children":[{"title":"简介","id":"简介","index":"1.1"},{"title":"Hexo","id":"Hexo","index":"1.2"},{"title":"搭建步骤","id":"搭建步骤","index":"1.3"},{"title":"准备工作","id":"准备工作","index":"1.4","children":[{"title":"Git","id":"Git","index":"1.4.1"},{"title":"Node.js","id":"Node-js","index":"1.4.2"}]},{"title":"Hexo安装与基本设置","id":"Hexo安装与基本设置","index":"1.5"},{"title":"将Hexo部署到Github上","id":"将Hexo部署到Github上","index":"1.6","children":[{"title":"创建个人仓库","id":"创建个人仓库","index":"1.6.1"},{"title":"生成SSH并添加到Github","id":"生成SSH并添加到Github","index":"1.6.2"},{"title":"设置Github Pages","id":"设置Github-Pages","index":"1.6.3"},{"title":"准备部署","id":"准备部署","index":"1.6.4"},{"title":"上传！","id":"上传！","index":"1.6.5"}]},{"title":"发布文章","id":"发布文章","index":"1.7"},{"title":"进阶设置","id":"进阶设置","index":"1.8"}]}],"reward":true,"copyright":{"license":"自由转载-保持署名-非商用-禁止演绎 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"Ziduan Zhang","link":"<a href=\"http://ziduan.tech/post/【教程】打造一个属于自己的博客/\" title=\"【教程】打造一个属于自己的博客\">http://ziduan.tech/post/【教程】打造一个属于自己的博客/</a>"}}